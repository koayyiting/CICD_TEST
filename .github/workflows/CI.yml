#Trigger when there is a push to main
name: Continuous Integration
on:
  push:
  
jobs:
  # Set up necessary installs
  Build_SetUp_and_TDD:
    name: Build SetUp
    runs-on: ubuntu-latest
    services:
      mysql:
        image: koayyiting/mysql_test:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: can_we_still_score_for_dop
    steps:
    - name: Set Up Go
      uses: actions/setup-go@v5  # Setup Go after checkout
      with:
        go-version: '1.21.x'
        cache-dependency-path: subdir/go.sum

    # [Edit] Retrieving from Development Repository
    - name: Checkout Development
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        go mod download

    - name: Run TDD Test
      uses: robherley/go-test-action@v0.1.0

    - name: Checkout Test Repo
      uses: actions/checkout@v2
      env:
        BROWSER: chrome
      with:
        repository: DevOpsTeamB2023/DevOps_Oct2023_TeamB_Testing
        
    # - name: Set up chromedriver
    #   uses: browser-actions/setup-chrome@latest
    # - run: chrome --version

    # Build and run MySQL container and detach
    - name: Start MySQL container
      run: docker run --name mysql_container -d koayyiting/mysql_test:latest

    # Test DB if working
    - name: Wait for MySQL to start
      run: |
        sleep 10
        
        docker exec mysql_container sh -c 'mysql -u root -p"${MYSQL_ROOT_PASSWORD}" -e "SHOW DATABASES;"'
        docker exec mysql_container sh -c 'mysql -u root -p"${MYSQL_ROOT_PASSWORD}" -e "USE record_db; SHOW TABLES;"'

    - name: Run BDD tests
      uses: joonvena/robotframework-docker-action@v1.0
      with:
        robot_tests_dir: TestCases

    # Test DB if working2
    - name: Wait for MySQL to start2
      run: |
        sleep 10
        docker exec mysql_container sh -c 'sleep 15 && mysql -u root -p"${MYSQL_ROOT_PASSWORD}" -e "SELECT * FROM Account;"'

    - name: Upload BDD test report
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: reports
        path: reports

  BDD_Report:
    if: always()
    needs: [Build_SetUp_and_TDD]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download test report
      uses: actions/download-artifact@v1
      with:
        name: reports
    - name: Send report to commit
      uses: joonvena/robotframework-reporter-action@v2.3
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}

      
